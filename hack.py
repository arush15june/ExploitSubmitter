#!/usr/bin/python3
from concurrent.futures import ThreadPoolExecutor, ProcessPoolExecutor 
import queue

import glob, importlib, os, pathlib, sys

def _get_executor(executor='thread'):
    EXECUTORS = {
        'thread': ThreadPoolExecutor, 
        'process': ProcessPoolExecutor
    }

    try:
        return EXECUTORS[executor]
    except:
        raise Exception() 

MODULE_DIR = '/home/alsaher/exploits'
sys.path.append(MODULE_DIR)

py_files = glob.glob(os.path.join(MODULE_DIR, '*.py'))

FLAGS = queue.Queue()

def send_flags():
    while True:
        flag = FLAGS.get()
        send_flag(flag)

def send_flag(flag):
    pass

IP_ADDRESS = 'localhost:1800'

with _get_executor(**kwargs) as executor:
    executor.submit(send_flags())

for py_file in py_files:
    module_name = pathlib.Path(py_file).stem
    module = importlib.import_module(module_name)
    with _get_executor(**kwargs) as executor:
        def handler():
            future = executor.submit(module.run, "yoyo", IP_ADDRESS)
            result = future.result()
            if result == 'FAUST':
                FLAGS.put(flag)

        executor.submit(handler)